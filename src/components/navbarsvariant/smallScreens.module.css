.navdiv {
  background-color: var(--color-zomp) !important;
  min-height: 4rem;
  position: relative;
  color: white;
}

.logo {
  max-width: 9rem;
  background-color: var(--color-zomp) !important;
  border: none !important;
}

.toggle_icon {
  position: absolute;
  top: 2rem;
  right: 1rem;
  z-index: 1051;
  cursor: pointer;
  font-size: 1.4rem;
  color: white;
  transition: transform 0.2s ease;
}
.toggle_icon:hover {
  transform: scale(1.15);
}

.left_icon {
  left: 1rem;
  right: auto;
  top: 2rem;
  font-size: 1.4rem;
  color: white;
  cursor: pointer;
  z-index: 1051;
  position: absolute;
  transition: transform 0.2s ease;
}
.left_icon:hover {
  transform: scale(1.15);
}

/* Full screen Offcanvas */
.fullscreen_offcanvas {
  height: 100vh !important;
  width: 100vw !important;
  background-color: var(--color-zomp) !important;
  position: fixed !important;
  top: 0;
  left: 0;
  z-index: 1050;
  color: white;
  display: flex !important;
  justify-content: center;
  align-items: center;
  overflow: hidden !important;
}

/* Centered list */
.offcanvas_list {
  list-style: none;
  padding: 3rem;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1.2rem;
  font-size: 1.2rem;
  font-weight: 500;
}

/* Menu items: uniform width */
.offcanvas_list li {
  cursor: pointer;
  padding: 0.6rem 1.2rem;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  font-weight: bold;
  min-width: 16rem;
  text-align: center;
  transition: all 0.3s ease;
  color: white !important;
}
.offcanvas_list li:hover,
.offcanvas_list li:active,
.offcanvas_list li:focus {
  background-color: var(--color-pastrelred-lightest);
  color: white !important;
  transform: scale(1.05);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

/* Text with count (favorites/cart) */
.text_with_count {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
}
.count_badge {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 1.3rem;
  height: 1.3rem;
  background-color: var(--color-pastrelred-lightest);
  color: white;
  font-size: 0.75rem;
  font-weight: bold;
  border-radius: 50%;
  line-height: 1;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
  transform: translateY(-0.1rem);
}

/* ===========================
   Search item (single-fade, full-width input)
   =========================== */

/* Keep the single translucent background on the LI, like other items */
.offcanvas_list li.offcanvas_searchItem {
  cursor: default;
  min-width: 16rem;
  text-align: center;
  padding: 0.6rem 1.2rem;
  background-color: rgba(255, 255, 255, 0.1); /* single fade layer */
  border-radius: 8px;
}

/* Lock hover/active visuals for the search LI (no extra scale/shadow) */
.offcanvas_list li.offcanvas_searchItem:hover,
.offcanvas_list li.offcanvas_searchItem:active,
.offcanvas_list li.offcanvas_searchItem:focus {
  background-color: rgba(255, 255, 255, 0.1);
  transform: none;
  box-shadow: none;
}

/* Inner form stays transparent to avoid double fade */
.offcanvas_searchForm {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  width: 100%;
  background: transparent !important;
  padding: 0; /* LI handles padding */
  box-shadow: none;
}

/* Full-width input; no scale on focus */
.search_form__control {
  display: flex;
  width: 100%;
  position: relative;
  height: 2.4rem;
  margin: 0;
  transform-origin: left center;
  transition: transform 0.3s ease;
}
.search_form__control:focus {
  transform: scaleX(1.2);
}

/* Icon button */
.search_icon {
  background: none !important;
  border: none !important;
  padding-left: 0.5rem;
  cursor: pointer;
  transform: translateX(0);
  transition: transform 0.2s ease;
  color: inherit; /* keep white icon */
}
.search_form__control:focus + .search_icon {
  transform: translateX(-0.15rem) scale(1.05);
}

/* Optional: match rounded feel */
.offcanvas_searchForm .search_form__control {
  border-radius: 8px;
}

/* ===========================
   Icons & counts
   =========================== */

.nav_icons {
  position: relative;
  margin: 0.2rem 0.2rem 0;
}
.nav_icons__count {
  position: absolute;
  top: -0.4rem;
  right: -0.4rem;
  width: 1.3rem;
  height: 1.3rem;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.8rem;
  font-weight: bold;
  background-color: var(--color-pastrelred-lightest);
  border-radius: 50%;
  line-height: 1;
}

/* Misc */
.-util-rotate_180 {
  transform: rotate(180deg);
}

.bottom {
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  gap: 0.75rem;
  margin-top: 1rem;
  width: 100%;
}
.content_options {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  list-style: none;
  align-items: center;
  justify-content: flex-start;
  width: auto;
}
.icon_wrapper {
  position: relative;
  display: inline-block;
}

/* ===========================
   Categories dropdown
   =========================== */

.catnav {
  position: relative;
}
.catbtn {
  background: transparent;
  border: 0;
  padding: 0;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 0.45rem;
  font: inherit;
  color: inherit;
}
.catcaret {
  transition: transform 0.25s ease;
}
.catcaret.isopen {
  transform: rotate(180deg);
}

/* Menu panel */
.catmenu {
  position: absolute;
  left: 0;
  top: calc(100% + 8px);
  background: #fff;
  color: #222;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.12);
  min-width: 240px;
  padding: 0.45rem;
  z-index: 1000;
}
.catmenu::before {
  content: "";
  position: absolute;
  top: -6px;
  left: 18px;
  width: 12px;
  height: 12px;
  background: #fff;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  transform: rotate(45deg);
}

/* Menu items */
.catmenuitem {
  display: flex;
  align-items: center;
  gap: 0.6rem;
  width: 100%;
  background: transparent;
  border: 0;
  text-align: left;
  padding: 0.55rem 0.65rem;
  border-radius: 8px;
  font-size: 0.95rem;
  color: inherit;
  text-decoration: none;
}
.catmenuitem i {
  color: var(--color-zomp);
}
.catmenuitem:hover {
  background: color-mix(in srgb, var(--color-zomp) 12%, white);
}
